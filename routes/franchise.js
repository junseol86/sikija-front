// Generated by CoffeeScript 1.11.1
(function() {
  var MongoClient, assert, authMechanism, authSource, express, f, password, router, secretValues, url, user;

  express = require('express');

  router = express.Router();

  MongoClient = require('mongodb').MongoClient;

  f = require('util').format;

  assert = require('assert');

  secretValues = require('./secretValues');

  user = encodeURIComponent(secretValues.secretValues.username);

  password = encodeURIComponent(secretValues.secretValues.password);

  authMechanism = 'DEFAULT';

  authSource = 'sikija';

  url = f('mongodb://%s:%s@133.130.103.96:27017/sikija?authMechanism=%s&authSource=%s', user, password, authMechanism, authSource);

  router.get('/list/:location/:zone/:category/:offset', function(req, res, next) {
    var category, locationId, offset, pageLimit, zone;
    pageLimit = 20;
    zone = req.params.zone;
    category = req.params.category;
    locationId = Number(req.params.location);
    offset = req.params.offset;
    return MongoClient.connect(url, function(err, db) {
      var categoryCondition, condition, franchise, location, zoneCondition;
      location = db.collection('location');
      zoneCondition = zone === 'all' ? {} : {
        'zone': zone
      };
      categoryCondition = category === 'all' ? {} : {
        "category": {
          $in: [category]
        }
      };
      condition = {
        $and: [
          {
            location: locationId
          }, zoneCondition, categoryCondition
        ]
      };
      assert.equal(null, err);
      franchise = db.collection('franchise');
      franchise.find(condition).count(function(err, count) {
        var more;
        more = (Number(offset) + 1) * Number(pageLimit) < Number(count) ? 1 : 0;
        return franchise.find(condition).sort({
          name: 1
        }).skip(pageLimit * offset).limit(pageLimit).toArray(function(err, docs) {
          return res.send({
            data: {
              more: more,
              franchise: docs
            }
          });
        });
      });
      return db.close;
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=franchise.js.map
